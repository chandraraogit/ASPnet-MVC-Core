@model ProductViewModel;
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
</head>
<body class="container">

@*     <form action="/Product/save" method="post">
        <label>Product ID</label>
        <input type="text" name="ProdID" />
        <br/>
        <label>Product Code</label>
        <input type="text" name="ProdCode" />
        <br />

        <label>Product Name</label>
        <input type="text" name="ProductName" />
        <br />

        <label>Product Price</label>
        <input type="text" name="ProductPrice" />
        <br />
        <button type="submit">Add</button>
    </form> *@

    @* // with help of HTML helper design a form  stand HTML helper
        2. can create strongly type HTML helper as well by adding @model ProductViewModel;  
    *@
   @*  @using (Html.BeginForm("SaveProduct","Product",FormMethod.Post))
    {
        <div>
            @Html.LabelFor(x=>x.ProdID,"Prod ID")
            @Html.TextBoxFor(x=>x.ProdID)
        </div>
        <br />
         <div>
            @Html.Label("Prod Code")
            @Html.TextBox("ProdCode")
        </div>
        <br />
        <div>
            @Html.Label("Product Name")
            @Html.TextBox("ProductName")
        </div>
        <br />
        <div>
            @Html.Label("Product Price")
            @Html.TextBox("ProductPrice")
        </div>
        <br />
        <input type="submit" value="AddProduct" />
    } *@

    @* strongler type helper example *@
    <div class="row">
        <div class="col-lg-6">
            @using (Html.BeginForm("SaveProduct", "Product", FormMethod.Post))
            {
                <div>
                    @Html.LabelFor(d => d.ProdCode)
                    @Html.TextBoxFor(d => d.ProdCode,"",new{@class="form-control"})
                </div>
                <div>
                    @Html.LabelFor(d => d.ProdID)
                    @Html.TextBoxFor(a => a.ProdID,"", new { @class = "form-control" })
                </div>
                <div>
                    @Html.LabelFor(x => x.ProductName)
                    @Html.TextBoxFor(x => x.ProductName, "", new { @class = "form-control" })
                </div>
                <div>
                    @Html.LabelFor(p => p.ProductPrice)
                    @Html.TextBoxFor(p => p.ProductPrice, "", new { @class = "form-control" })
                </div>
                <input type="submit" value="Add Product" class="btn btn-success" />
            }
        </div>
    </div>
   
</body>
</html>
